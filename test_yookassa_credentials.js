// –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ YooKassa credentials
import axios from 'axios';

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ YooKassa API credentials...\n');

const SHOP_ID = '1158662';
const SECRET_KEY = 'live_Xm-pxAfO7W6qgQWzD-0GlDX7xdCyVF3lzZDHuF8wBKE';

// –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
const auth = Buffer.from(`${SHOP_ID}:${SECRET_KEY}`).toString('base64');

console.log('üìã –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:');
console.log(`üè™ Shop ID: ${SHOP_ID}`);
console.log(`üîë Secret Key: ${SECRET_KEY.substring(0, 20)}...`);
console.log(`üîê Auth Header: Basic ${auth.substring(0, 30)}...\n`);

// –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å - –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞–≥–∞–∑–∏–Ω–µ
async function testYooKassaCredentials() {
  try {
    console.log('üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ YooKassa API...');
    
    const response = await axios.get('https://api.yookassa.ru/v3/me', {
      headers: {
        'Authorization': `Basic ${auth}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ –£—Å–ø–µ—Ö! Credentials —Ä–∞–±–æ—Ç–∞—é—Ç.');
    console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–≥–∞–∑–∏–Ω–µ:', JSON.stringify(response.data, null, 2));
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ credentials:');
    console.log('Status:', error.response?.status);
    console.log('Status Text:', error.response?.statusText);
    console.log('Error Data:', JSON.stringify(error.response?.data, null, 2));
    
    if (error.response?.status === 401) {
      console.log('\nüö® –û—à–∏–±–∫–∞ 401: –ù–µ–≤–µ—Ä–Ω—ã–µ credentials!');
      console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
      console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Shop ID –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ YooKassa');
      console.log('2. –ü–µ—Ä–µ–≤—ã–ø—É—Å—Ç–∏—Ç–µ Secret Key –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" ‚Üí "–ö–ª—é—á–∏ API"');
      console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ü–†–û–î–ê–ö–®–ù –∫–ª—é—á–∏, –∞ –Ω–µ —Ç–µ—Å—Ç–æ–≤—ã–µ');
    }
  }
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
async function testPaymentCreation() {
  try {
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞...');
    
    const paymentData = {
      amount: {
        value: "1.00",
        currency: "RUB"
      },
      confirmation: {
        type: "redirect",
        return_url: "https://example.com"
      },
      capture: true,
      description: "–¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ credentials"
    };
    
    const response = await axios.post('https://api.yookassa.ru/v3/payments', paymentData, {
      headers: {
        'Authorization': `Basic ${auth}`,
        'Content-Type': 'application/json',
        'Idempotence-Key': Math.random().toString(36).substring(2, 15)
      }
    });
    
    console.log('‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('üí≥ Payment ID:', response.data.id);
    console.log('üîó Payment URL:', response.data.confirmation?.confirmation_url);
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:');
    console.log('Status:', error.response?.status);
    console.log('Error Data:', JSON.stringify(error.response?.data, null, 2));
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
await testYooKassaCredentials();
await testPaymentCreation();

console.log('\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.');
