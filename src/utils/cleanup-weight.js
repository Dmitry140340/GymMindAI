import { initDatabase, getUserMetrics } from '../services/database.js';

async function cleanupWeightRecords() {
  try {
    await initDatabase();
    
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —á–µ—Ä–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –≤ –∫–æ–¥–µ');
    console.log('üìù –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ (1–∫–≥ –∏ 50–∫–≥) –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è');
    console.log('‚öñÔ∏è –í–µ—Å —Å–Ω–∞—Ä—è–¥–æ–≤ —Ç–µ–ø–µ—Ä—å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –∑–∞–ø–∏—Å–∏ –≤–µ—Å–∞
    const remaining = await getUserMetrics(55, 'weight', 10);
    
    console.log('\nüìä –¢–µ–∫—É—â–∏–µ –∑–∞–ø–∏—Å–∏ –≤–µ—Å–∞:');
    remaining.forEach((record, index) => {
      const date = new Date(record.recorded_at);
      console.log(`${index + 1}. ${record.value} ${record.unit} - ${date.toLocaleDateString('ru-RU')} ${date.toLocaleTimeString('ru-RU')}`);
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  }
  
  process.exit(0);
}

cleanupWeightRecords();
