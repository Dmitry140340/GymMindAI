import axios from 'axios';

const COZE_API_BASE_URL = 'https://api.coze.com';

// –•—Ä–∞–Ω–∏–º conversation_id –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const userConversations = new Map();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ –¥–∏–∞–ª–æ–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export function resetUserConversation(userId) {
  userConversations.delete(userId.toString());
  console.log(`üîÑ –°–±—Ä–æ—à–µ–Ω –¥–∏–∞–ª–æ–≥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ conversation_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export function getUserConversationId(userId) {
  return userConversations.get(userId.toString());
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Coze AI (–ø–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è)
export async function sendMessageToCoze(message, userId, conversationId = null) {
  try {
    // –ï—Å–ª–∏ –µ—Å—Ç—å API –∫–ª—é—á - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é
    if (process.env.COZE_API_KEY && process.env.COZE_BOT_ID && 
        !process.env.COZE_API_KEY.includes('your_')) {
      
      // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π conversation_id –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const savedConversationId = userConversations.get(userId.toString()) || conversationId;
      
      console.log('ü§ñ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Coze API v3:', {
        botId: process.env.COZE_BOT_ID,
        message: message.substring(0, 50) + '...',
        userId,
        conversationId: savedConversationId
      });
      
      const requestData = {
        bot_id: process.env.COZE_BOT_ID,
        user_id: userId.toString(),
        stream: false,
        auto_save_history: true,
        additional_messages: [
          {
            role: "user",
            content: message,
            content_type: "text"
          }
        ]
      };
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å conversation_id –≤ query string (–µ—Å–ª–∏ –µ—Å—Ç—å)
      let apiUrl = `${COZE_API_BASE_URL}/v3/chat`;
      if (savedConversationId) {
        apiUrl += `?conversation_id=${savedConversationId}`;
        console.log('üîÑ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å conversation_id –≤ URL:', savedConversationId);
      } else {
        console.log('üÜï –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥');
      }
      
      const response = await axios.post(
        apiUrl,
        requestData,
        {
          headers: {
            'Authorization': `Bearer ${process.env.COZE_API_KEY}`,
            'Content-Type': 'application/json'
          },
          timeout: 300000 // 5 –º–∏–Ω—É—Ç —Ç–∞–π–º–∞—É—Ç
        }
      );

      console.log('‚úÖ Coze API v3 –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:', {
        status: response.status,
        data: response.data
      });

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–º—É API
      if (response.data && response.data.code === 0) {
        const chatData = response.data.data;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º conversation_id –¥–ª—è –Ω–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
        if (!savedConversationId && chatData?.conversation_id) {
          userConversations.set(userId.toString(), chatData.conversation_id);
          console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π conversation_id:', chatData.conversation_id);
        }
        
        // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å "in_progress", –Ω—É–∂–Ω–æ –¥–æ–∂–¥–∞—Ç—å—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        if (chatData?.status === 'in_progress') {
          console.log('‚è≥ –ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è, –æ–∂–∏–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
          
          // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–º–∞–∫—Å–∏–º—É–º 5 –º–∏–Ω—É—Ç)
          const chatId = chatData.id;
          const conversationId = chatData.conversation_id;
          
          for (let attempt = 0; attempt < 150; attempt++) {
            await new Promise(resolve => setTimeout(resolve, 2000)); // –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã
            
            // –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
            if (attempt % 15 === 0 && attempt > 0) {
              console.log(`‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Coze... ${attempt * 2} —Å–µ–∫—É–Ω–¥ –∏–∑ 300`);
            }
            
            try {
              const resultResponse = await axios.get(
                `${COZE_API_BASE_URL}/v3/chat/retrieve?chat_id=${chatId}&conversation_id=${conversationId}`,
                {
                  headers: {
                    'Authorization': `Bearer ${process.env.COZE_API_KEY}`,
                    'Content-Type': 'application/json'
                  },
                  timeout: 60000 // 1 –º–∏–Ω—É—Ç–∞ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
                }
              );
              
              if (resultResponse.data?.code === 0) {
                const resultData = resultResponse.data.data;
                console.log('üì• –°—Ç–∞—Ç—É—Å —á–∞—Ç–∞:', resultData?.status);
                
                if (resultData?.status === 'completed') {
                  // –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
                  const messagesResponse = await axios.get(
                    `${COZE_API_BASE_URL}/v3/chat/message/list?chat_id=${chatId}&conversation_id=${conversationId}`,
                    {
                      headers: {
                        'Authorization': `Bearer ${process.env.COZE_API_KEY}`,
                        'Content-Type': 'application/json'
                      },
                      timeout: 60000 // 1 –º–∏–Ω—É—Ç–∞ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
                    }
                  );
                  
                  if (messagesResponse.data?.code === 0) {
                    const messages = messagesResponse.data.data || [];
                    const assistantMessage = messages.find(
                      msg => msg.role === 'assistant' && msg.type === 'answer'
                    );
                    
                    if (assistantMessage && assistantMessage.content) {
                      // –°–æ—Ö—Ä–∞–Ω—è–µ–º conversation_id —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç (–ø–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å)
                      if (!savedConversationId) {
                        userConversations.set(userId.toString(), conversationId);
                        console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω –Ω–æ–≤—ã–π conversation_id:', conversationId);
                      } else {
                        console.log('üîí –û—Å—Ç–∞–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π conversation_id:', savedConversationId);
                      }
                      
                      return {
                        success: true,
                        message: assistantMessage.content,
                        conversationId: savedConversationId || conversationId
                      };
                    }
                  }
                  
                  break; // –ó–∞–≤–µ—Ä—à–∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫—É
                } else if (resultData?.status === 'requires_action') {
                  console.log('üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏...');
                  
                  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–±—É–µ–º—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö
                  try {
                    const actionsResponse = await axios.get(
                      `${COZE_API_BASE_URL}/v3/chat/message/list?chat_id=${chatId}&conversation_id=${conversationId}`,
                      {
                        headers: {
                          'Authorization': `Bearer ${process.env.COZE_API_KEY}`,
                          'Content-Type': 'application/json'
                        },
                        timeout: 60000
                      }
                    );
                    
                    if (actionsResponse.data?.code === 0) {
                      const messages = actionsResponse.data.data || [];
                      
                      // –ò—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å tool_calls –∏–ª–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
                      const toolCallMessages = messages.filter(
                        msg => msg.type === 'tool_call' || msg.type === 'function_call'
                      );
                      
                      console.log('üõ†Ô∏è –ù–∞–π–¥–µ–Ω–æ –≤—ã–∑–æ–≤–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π:', toolCallMessages.length);
                      
                      // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ –∫–∞–∂–¥–æ–≥–æ tool call
                      toolCallMessages.forEach((msg, index) => {
                        console.log(`üîß Tool Call ${index + 1}:`, {
                          id: msg.id,
                          type: msg.type,
                          content: msg.content,
                          tool_calls: msg.tool_calls
                        });
                      });
                      
                      // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å tool calls –∏–∑ content –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é
                      let allToolCalls = [];
                      
                      toolCallMessages.forEach(msg => {
                        if (msg.tool_calls && Array.isArray(msg.tool_calls)) {
                          allToolCalls = allToolCalls.concat(msg.tool_calls);
                        } else if (msg.content && typeof msg.content === 'string') {
                          try {
                            const parsed = JSON.parse(msg.content);
                            if (parsed.tool_calls) {
                              allToolCalls = allToolCalls.concat(parsed.tool_calls);
                            }
                          } catch (e) {
                            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞
                          }
                        }
                      });
                      
                      console.log('üéØ –í—Å–µ–≥–æ tool calls –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:', allToolCalls.length);
                      
                      if (allToolCalls.length > 0) {
                        // –§–æ—Ä–º–∏—Ä—É–µ–º tool outputs –ø—Ä–∞–≤–∏–ª—å–Ω–æ
                        const toolOutputs = allToolCalls.map(toolCall => ({
                          tool_call_id: toolCall.id,
                          output: "–î–µ–π—Å—Ç–≤–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
                        }));
                        
                        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º tool outputs:', toolOutputs);
                        
                        const confirmResponse = await axios.post(
                          `${COZE_API_BASE_URL}/v3/chat/submit_tool_outputs`,
                          {
                            chat_id: chatId,
                            conversation_id: conversationId,
                            tool_outputs: toolOutputs
                          },
                          {
                            headers: {
                              'Authorization': `Bearer ${process.env.COZE_API_KEY}`,
                              'Content-Type': 'application/json'
                            },
                            timeout: 60000
                          }
                        );
                        
                        console.log('üì• –û—Ç–≤–µ—Ç –Ω–∞ submit_tool_outputs:', {
                          status: confirmResponse.status,
                          data: confirmResponse.data
                        });
                        
                        if (confirmResponse.data?.code === 0) {
                          console.log('‚úÖ –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ...');
                          // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª –æ–∂–∏–¥–∞–Ω–∏—è - –ù–ï –¥–µ–ª–∞–µ–º break
                        } else {
                          console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏:', confirmResponse.data);
                          // –¢–∞–∫–∂–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ, –≤–æ–∑–º–æ–∂–Ω–æ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏—Ç—Å—è
                        }
                      } else {
                        console.log('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã tool calls –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è');
                        
                        // –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ - –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                        console.log('üîÑ –ü—Ä–æ–±—É–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...');
                      }
                      
                      // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –≥–æ—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ requires_action
                      const assistantMessage = messages.find(
                        msg => msg.role === 'assistant' && msg.type === 'answer' && msg.content
                      );
                      
                      if (assistantMessage && assistantMessage.content) {
                        console.log('üéâ –ù–∞–π–¥–µ–Ω –≥–æ—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ requires_action');
                        // –°–æ—Ö—Ä–∞–Ω—è–µ–º conversation_id —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
                        if (!savedConversationId) {
                          userConversations.set(userId.toString(), conversationId);
                          console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω –Ω–æ–≤—ã–π conversation_id –¥–ª—è requires_action:', conversationId);
                        }
                        
                        return {
                          success: true,
                          message: assistantMessage.content,
                          conversationId: savedConversationId || conversationId
                        };
                      }
                    }
                  } catch (confirmError) {
                    console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç—Ä–µ–±—É–µ–º—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π:', confirmError.message);
                  }
                } else if (resultData?.status === 'failed') {
                  console.log('‚ùå –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π');
                  console.log('üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', JSON.stringify(resultData, null, 2));
                  console.log('üîç –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API:', JSON.stringify(resultResponse.data, null, 2));
                  
                  // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∞–Ω–∞ —Å –±–∞–ª–∞–Ω—Å–æ–º —Ç–æ–∫–µ–Ω–æ–≤ (–∫–æ–¥ 4011) –∏–ª–∏ –¥—Ä—É–≥–∏–º–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ –æ—à–∏–±–∫–∞–º–∏ - –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
                  if (resultData?.last_error?.code === 4011) {
                    console.log('üí∞ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –±–∞–ª–∞–Ω—Å CozeToken. –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –∏–º–∏—Ç–∞—Ü–∏—é –ò–ò');
                    return await simulateAIResponse(message, userId);
                  }
                  
                  console.log('‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ Coze API. –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –∏–º–∏—Ç–∞—Ü–∏—é –ò–ò');
                  return await simulateAIResponse(message, userId);
                }
              }
            } catch (pollError) {
              console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:', pollError.message);
            }
          }
          
          // –ï—Å–ª–∏ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫ –æ—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
          console.log('‚ö†Ô∏è Coze API –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π. –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –∏–º–∏—Ç–∞—Ü–∏—é –ò–ò');
          return await simulateAIResponse(message, userId);
        } else {
          // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ "in_progress", –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ
          const messages = response.data.data?.messages || [];
          const assistantMessage = messages.find(
            msg => msg.role === 'assistant' && msg.type === 'answer'
          );
          
          if (assistantMessage) {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º conversation_id —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
            const finalConversationId = response.data.data?.conversation_id || savedConversationId;
            if (!savedConversationId) {
              userConversations.set(userId.toString(), finalConversationId);
              console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω –Ω–æ–≤—ã–π conversation_id (–ø—Ä—è–º–æ–π –æ—Ç–≤–µ—Ç):', finalConversationId);
            }
            
            return {
              success: true,
              message: assistantMessage.content,
              conversationId: savedConversationId || finalConversationId
            };
          }
          
          // –ï—Å–ª–∏ –Ω–µ—Ç assistant —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–æ –µ—Å—Ç—å –¥—Ä—É–≥–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
          if (messages.length > 0) {
            const lastMessage = messages[messages.length - 1];
            return {
              success: true,
              message: lastMessage.content || '–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò',
              conversationId: response.data.data?.conversation_id || conversationId
            };
          }
        }
      }

      // –ï—Å–ª–∏ –±–æ—Ç –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω (–∫–æ–¥ 4015) –∏–ª–∏ –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ - –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ fallback
      if (response.data && response.data.code !== 0) {
        console.log('‚ö†Ô∏è Coze API –æ—à–∏–±–∫–∞:', response.data.msg);
        console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –∏–º–∏—Ç–∞—Ü–∏—é –ò–ò');
        return await simulateAIResponse(message, userId);
      }

      return {
        success: false,
        message: '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.',
        conversationId: null
      };
    }
    
    console.log('‚ö†Ô∏è Coze API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–∏—Ç–∞—Ü–∏—é');
    // –ï—Å–ª–∏ –Ω–µ—Ç API –∫–ª—é—á–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–∏—Ç–∞—Ü–∏—é —É–º–Ω–æ–≥–æ –ò–ò
    return await simulateAIResponse(message, userId);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Coze API v3:', {
      message: error.message,
      status: error.response?.status,
      data: error.response?.data
    });
    
    // Fallback –Ω–∞ –∏–º–∏—Ç–∞—Ü–∏—é
    console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –∏–º–∏—Ç–∞—Ü–∏—é –ò–ò');
    return await simulateAIResponse(message, userId);
  }
}

// –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –ò–ò-—Ç—Ä–µ–Ω–µ—Ä–∞ (–ø–æ–∫–∞ –Ω–µ—Ç API)
async function simulateAIResponse(message, userId) {
  const lowerMessage = message.toLowerCase();
  
  let response = '';
  
  if (lowerMessage.includes('–ø—Ä–æ–≥—Ä–∞–º–º–∞') || lowerMessage.includes('—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫')) {
    response = `üèãÔ∏è‚Äç‚ôÇÔ∏è **–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫**\n\n` +
               `–ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:\n\n` +
               `**–î–µ–Ω—å 1 - –í–µ—Ä—Ö —Ç–µ–ª–∞:**\n` +
               `‚Ä¢ –û—Ç–∂–∏–º–∞–Ω–∏—è: 3x10-15\n` +
               `‚Ä¢ –ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è: 3x5-10\n` +
               `‚Ä¢ –ü–ª–∞–Ω–∫–∞: 3x30-60 —Å–µ–∫\n\n` +
               `**–î–µ–Ω—å 2 - –ù–∏–∑ —Ç–µ–ª–∞:**\n` +
               `‚Ä¢ –ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è: 3x15-20\n` +
               `‚Ä¢ –í—ã–ø–∞–¥—ã: 3x10 –Ω–∞ –∫–∞–∂–¥—É—é –Ω–æ–≥—É\n` +
               `‚Ä¢ –ü–æ–¥—ä–µ–º—ã –Ω–∞ –Ω–æ—Å–∫–∏: 3x15\n\n` +
               `**–î–µ–Ω—å 3 - –ö–∞—Ä–¥–∏–æ:**\n` +
               `‚Ä¢ –ë–µ–≥/—Ö–æ–¥—å–±–∞: 20-30 –º–∏–Ω—É—Ç\n` +
               `‚Ä¢ –ë–µ—Ä–ø–∏: 3x5-10\n\n` +
               `üí° *–ù–∞—á–∏–Ω–∞–π—Ç–µ —Å –º–µ–Ω—å—à–∏—Ö –Ω–∞–≥—Ä—É–∑–æ–∫ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ!*`;
               
  } else if (lowerMessage.includes('–ø–∏—Ç–∞–Ω–∏–µ') || lowerMessage.includes('–¥–∏–µ—Ç–∞') || lowerMessage.includes('–µ–¥–∞')) {
    response = `ü•ó **–°–æ–≤–µ—Ç—ã –ø–æ –ø–∏—Ç–∞–Ω–∏—é**\n\n` +
               `–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∑–¥–æ—Ä–æ–≤–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è:\n\n` +
               `**–ó–∞–≤—Ç—Ä–∞–∫ (7:00-9:00):**\n` +
               `‚Ä¢ –û–≤—Å—è–Ω–∫–∞ + —Ñ—Ä—É–∫—Ç—ã + –æ—Ä–µ—Ö–∏\n` +
               `‚Ä¢ –ò–ª–∏: —è–π—Ü–∞ + –æ–≤–æ—â–∏ + —Ü–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤–æ–π —Ö–ª–µ–±\n\n` +
               `**–û–±–µ–¥ (12:00-14:00):**\n` +
               `‚Ä¢ –ë–µ–ª–æ–∫ (–∫—É—Ä–∏—Ü–∞, —Ä—ã–±–∞, –±–æ–±–æ–≤—ã–µ)\n` +
               `‚Ä¢ –°–ª–æ–∂–Ω—ã–µ —É–≥–ª–µ–≤–æ–¥—ã (—Ä–∏—Å, –≥—Ä–µ—á–∫–∞)\n` +
               `‚Ä¢ –û–≤–æ—â–∏\n\n` +
               `**–£–∂–∏–Ω (18:00-20:00):**\n` +
               `‚Ä¢ –õ–µ–≥–∫–∏–π –±–µ–ª–æ–∫ (—Ä—ã–±–∞, —Ç–≤–æ—Ä–æ–≥)\n` +
               `‚Ä¢ –û–≤–æ—â–∏\n` +
               `‚Ä¢ –ú–∏–Ω–∏–º—É–º —É–≥–ª–µ–≤–æ–¥–æ–≤\n\n` +
               `üíß **–í–æ–¥–∞:** 30-35 –º–ª –Ω–∞ –∫–≥ –≤–µ—Å–∞\n` +
               `üö´ **–ò–∑–±–µ–≥–∞–π—Ç–µ:** —Ñ–∞—Å—Ç—Ñ—É–¥, —Å–ª–∞–¥–∫–æ–µ, –∂–∞—Ä–µ–Ω–æ–µ`;
               
  } else if (lowerMessage.includes('–ø–æ—Ö—É–¥–µ—Ç—å') || lowerMessage.includes('–≤–µ—Å')) {
    response = `‚öñÔ∏è **–ü–ª–∞–Ω –ø–æ —Å–Ω–∏–∂–µ–Ω–∏—é –≤–µ—Å–∞**\n\n` +
               `–ö–ª—é—á–µ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã:\n\n` +
               `ÔøΩ **–î–µ—Ñ–∏—Ü–∏—Ç –∫–∞–ª–æ—Ä–∏–π:**\n` +
               `‚Ä¢ –¢—Ä–∞—Ç—å—Ç–µ –±–æ–ª—å—à–µ, —á–µ–º –ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç–µ\n` +
               `‚Ä¢ –î–µ—Ñ–∏—Ü–∏—Ç: 300-500 –∫–∫–∞–ª –≤ –¥–µ–Ω—å\n\n` +
               `üèÉ‚Äç‚ôÄÔ∏è **–ö–∞—Ä–¥–∏–æ:**\n` +
               `‚Ä¢ 150 –º–∏–Ω—É—Ç –≤ –Ω–µ–¥–µ–ª—é —É–º–µ—Ä–µ–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n` +
               `‚Ä¢ –ò–ª–∏ 75 –º–∏–Ω—É—Ç –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ–π\n\n` +
               `üí™ **–°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:**\n` +
               `‚Ä¢ 2-3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é\n` +
               `‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è—é—Ç –º—ã—à–µ—á–Ω—É—é –º–∞—Å—Å—É\n\n` +
               `üìä **–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ:**\n` +
               `‚Ä¢ –í–∑–≤–µ—à–∏–≤–∞–π—Ç–µ—Å—å 1 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é\n` +
               `‚Ä¢ –î–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞\n` +
               `‚Ä¢ –ò–∑–º–µ—Ä—è–π—Ç–µ –æ–±—ä–µ–º—ã\n\n` +
               `‚è∞ **–¢–µ—Ä–ø–µ–Ω–∏–µ:** —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ 2-4 –Ω–µ–¥–µ–ª–∏`;
               
  } else if (lowerMessage.includes('–º—ã—à—Ü') || lowerMessage.includes('–º–∞—Å—Å–∞') || lowerMessage.includes('–Ω–∞–∫–∞—á–∞—Ç—å')) {
    response = `üí™ **–ù–∞–±–æ—Ä –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã**\n\n` +
               `–ü–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π:\n\n` +
               `üçñ **–ü–∏—Ç–∞–Ω–∏–µ:**\n` +
               `‚Ä¢ –ü—Ä–æ—Ñ–∏—Ü–∏—Ç –∫–∞–ª–æ—Ä–∏–π: +300-500 –∫–∫–∞–ª\n` +
               `‚Ä¢ –ë–µ–ª–æ–∫: 1.6-2.2–≥ –Ω–∞ –∫–≥ –≤–µ—Å–∞\n` +
               `‚Ä¢ –£–≥–ª–µ–≤–æ–¥—ã: 4-7–≥ –Ω–∞ –∫–≥ –≤–µ—Å–∞\n` +
               `‚Ä¢ –ñ–∏—Ä—ã: 0.8-1.2–≥ –Ω–∞ –∫–≥ –≤–µ—Å–∞\n\n` +
               `üèãÔ∏è **–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:**\n` +
               `‚Ä¢ 3-4 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é\n` +
               `‚Ä¢ –ë–∞–∑–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è (–ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è, –∂–∏–º, —Ç—è–≥–∞)\n` +
               `‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å–∏—è –Ω–∞–≥—Ä—É–∑–æ–∫\n` +
               `‚Ä¢ 6-12 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n\n` +
               `üò¥ **–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ:**\n` +
               `‚Ä¢ –°–æ–Ω: 7-9 —á–∞—Å–æ–≤\n` +
               `‚Ä¢ –û—Ç–¥—ã—Ö –º–µ–∂–¥—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏: 48-72 —á–∞—Å–∞\n\n` +
               `üìà **–†–µ–∑—É–ª—å—Ç–∞—Ç:** –≤–∏–¥–∏–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ 4-6 –Ω–µ–¥–µ–ª—å`;
               
  } else {
    response = `ü§ñ **–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≤–∞—à –ò–ò-—Ç—Ä–µ–Ω–µ—Ä**\n\n` +
               `–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å:\n\n` +
               `üèãÔ∏è‚Äç‚ôÇÔ∏è **–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏:**\n` +
               `‚Ä¢ –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º\n` +
               `‚Ä¢ –¢–µ—Ö–Ω–∏–∫–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π\n` +
               `‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–æ–∫\n\n` +
               `ü•ó **–ü–∏—Ç–∞–Ω–∏–µ–º:**\n` +
               `‚Ä¢ –ü–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è\n` +
               `‚Ä¢ –†–∞—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π\n` +
               `‚Ä¢ –†–µ—Ü–µ–ø—Ç—ã\n\n` +
               `üìä **–¶–µ–ª—è–º–∏:**\n` +
               `‚Ä¢ –ü–æ—Ö—É–¥–µ–Ω–∏–µ\n` +
               `‚Ä¢ –ù–∞–±–æ—Ä –º–∞—Å—Å—ã\n` +
               `‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã\n\n` +
               `üí° –ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ —Ñ–∏—Ç–Ω–µ—Å–µ!\n\n` +
               `*–ü—Ä–∏–º–µ—Ä—ã: "—Å–æ—Å—Ç–∞–≤—å –ø—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫", "–∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–∏—Ç–∞—Ç—å—Å—è", "—Ö–æ—á—É –ø–æ—Ö—É–¥–µ—Ç—å"*`;
  }
  
  return {
    success: true,
    message: response,
    conversationId: null
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–æ—Å—Ç—É–ø–∞ (—Ç–µ–ø–µ—Ä—å –Ω–µ –Ω—É–∂–Ω–∞)
export async function getCozeInstructions(accessToken) {
  return {
    success: true,
    message: `üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ò–ò-—Ñ–∏—Ç–Ω–µ—Å —Ç—Ä–µ–Ω–µ—Ä!\n\n` +
             `ü§ñ –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-—Ç—Ä–µ–Ω–µ—Ä –∏ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º –¥–æ—Å—Ç–∏—á—å —Ñ–∏—Ç–Ω–µ—Å-—Ü–µ–ª–µ–π!\n\n` +
             `‚ú® –ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n` +
             `‚Ä¢ üèãÔ∏è‚Äç‚ôÇÔ∏è –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n` +
             `‚Ä¢ ü•ó –ü–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è –∏ —Å–æ–≤–µ—Ç—ã –ø–æ –¥–∏–µ—Ç–µ\n` +
             `‚Ä¢ ‚öñÔ∏è –ü–ª–∞–Ω—ã –ø–æ—Ö—É–¥–µ–Ω–∏—è –∏ –Ω–∞–±–æ—Ä–∞ –º–∞—Å—Å—ã\n` +
             `‚Ä¢ üí™ –¢–µ—Ö–Ω–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π\n` +
             `‚Ä¢ üìä –†–∞—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π –∏ –º–∞–∫—Ä–æ–Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤\n` +
             `‚Ä¢ üéØ –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–µ–π\n\n` +
             `üí¨ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å!\n\n` +
             `ÔøΩ –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:\n` +
             `"–°–æ—Å—Ç–∞–≤—å –ø—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –¥–ª—è –¥–æ–º–∞"\n` +
             `"–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–∏—Ç–∞—Ç—å—Å—è –¥–ª—è –ø–æ—Ö—É–¥–µ–Ω–∏—è?"\n` +
             `"–•–æ—á—É –Ω–∞–∫–∞—á–∞—Ç—å –º—ã—à—Ü—ã, —á—Ç–æ –¥–µ–ª–∞—Ç—å?"\n\n` +
             `üè† –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /menu`
  };
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Coze API
export async function checkCozeConnection() {
  try {
    if (!process.env.COZE_API_KEY || !process.env.COZE_BOT_ID || 
        process.env.COZE_API_KEY.includes('your_')) {
      console.log('‚ö†Ô∏è Coze API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      return false;
    }
    
    console.log('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Coze API v3...');
    
    const response = await axios.post(
      `${COZE_API_BASE_URL}/v3/chat`,
      {
        bot_id: process.env.COZE_BOT_ID,
        user_id: 'test_user',
        stream: false,
        auto_save_history: false,
        additional_messages: [
          {
            role: "user",
            content: "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
            content_type: "text"
          }
        ]
      },
      {
        headers: {
          'Authorization': `Bearer ${process.env.COZE_API_KEY}`,
          'Content-Type': 'application/json'
        },
        timeout: 60000 // 1 –º–∏–Ω—É—Ç–∞ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
      }
    );
    
    console.log('‚úÖ Coze API v3 –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ');
    return true;
    
  } catch (error) {
    console.error('‚ùå Coze API v3 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', {
      message: error.message,
      status: error.response?.status,
      data: error.response?.data
    });
    return false;
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ (–∑–∞–≥–ª—É—à–∫–∞)
export async function getBotInfo() {
  return {
    status: 'integrated_mode', // –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º - –≤—Å—ë –≤ –æ–¥–Ω–æ–º –±–æ—Ç–µ
    main_bot: 'current_bot' // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–µ–≥–æ –±–æ—Ç–∞
  };
}
