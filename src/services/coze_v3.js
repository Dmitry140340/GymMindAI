import axios from 'axios';
import dotenv from 'dotenv';

dotenv.config();

const COZE_API_BASE_URL = 'https://api.coze.com';

// Chat API v3 —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Coze
export async function runCozeChat(accessToken, message, userId, instructions) {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ Coze Chat v3 –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
    console.log('üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:', message);
    console.log('üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:', instructions);

    if (!process.env.COZE_API_KEY || process.env.COZE_API_KEY.includes('your_')) {
      console.log('‚ö†Ô∏è API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–º—É–ª—è—Ü–∏—é');
      return await simulateAIResponse(message, userId);
    }

    if (!process.env.COZE_BOT_ID || process.env.COZE_BOT_ID.includes('your_')) {
      console.log('‚ö†Ô∏è Bot ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–º—É–ª—è—Ü–∏—é');
      return await simulateAIResponse(message, userId);
    }

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º API v3 —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    const response = await axios.post(
      `${COZE_API_BASE_URL}/v3/chat`,
      {
        bot_id: process.env.COZE_BOT_ID,
        user_id: userId.toString(),
        additional_messages: [
          {
            role: 'user',
            content: message,
            content_type: 'text'
          }
        ],
        stream: false,
        auto_save_history: true
      },
      {
        headers: {
          'Authorization': `Bearer ${process.env.COZE_API_KEY}`,
          'Content-Type': 'application/json'
        },
        timeout: 120000
      }
    );

    console.log('üì• –û—Ç–≤–µ—Ç Coze Chat v3 - —Å—Ç–∞—Ç—É—Å:', response.status);
    console.log('üìÑ –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç Coze v3:', JSON.stringify(response.data, null, 2));

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ API v3
    if (response.data) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏
      if (response.data.code && response.data.code !== 0) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ Coze v3:', response.data);
        return {
          success: false,
          message: response.data.msg || '–û—à–∏–±–∫–∞ API v3',
          error: response.data.msg || '–û—à–∏–±–∫–∞ API v3'
        };
      }

      // API v3 —Å stream=false –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
      const conversationId = response.data.data?.conversation_id;
      const chatId = response.data.data?.id;
      
      console.log('üÜî Conversation ID:', conversationId);
      console.log('üí¨ Chat ID:', chatId);

      // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å "in_progress", –∂–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏ –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
      if (response.data.data?.status === 'in_progress') {
        console.log('‚è≥ –†–∞–∑–≥–æ–≤–æ—Ä –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, –æ–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...');
        
        try {
          const finalAnswer = await pollForChatCompletion(conversationId, chatId);
          if (finalAnswer) {
            return {
              success: true,
              message: finalAnswer,
              data: {
                conversation_id: conversationId,
                chat_id: chatId,
                api_version: 'v3',
                success: true
              }
            };
          }
        } catch (pollError) {
          console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞:', pollError.message);
          // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
        }
      }

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º —Ä–∞–±–æ—Ç—ã API v3
      return {
        success: true,
        message: '‚úÖ **Coze API v3 —Ä–∞–±–æ—Ç–∞–µ—Ç!**\n\n' +
                 'üîÑ **–°—Ç–∞—Ç—É—Å:** ' + response.data.data?.status + '\n' +
                 'ü§ñ **Bot ID:** ' + process.env.COZE_BOT_ID + '\n\n' +
                 'üìä **–î–µ—Ç–∞–ª–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞:**\n' +
                 `‚Ä¢ Conversation ID: ${conversationId}\n` +
                 `‚Ä¢ Chat ID: ${chatId}\n\n` +
                 '‚ö° **–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞!** API v3 —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω.\n\n' +
                 'ÔøΩ *–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ polling —Ä–µ–∂–∏–º–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏.*\n\n' +
                 'üéØ **–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:** –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ List Messages API.',
        data: {
          conversation_id: conversationId,
          chat_id: chatId,
          status: response.data.data?.status,
          api_version: 'v3',
          success: true
        }
      };
    } else {
      console.log('‚ùå –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç Coze v3');
      return {
        success: false,
        message: '–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API v3',
        error: '–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API v3'
      };
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Coze Chat v3:', error.message);
    
    if (error.response) {
      console.error('üìÑ –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ v3:', error.response.data);
      
      if (error.response.status === 401) {
        return {
          success: false,
          message: 'üîë –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á –¥–ª—è Coze v3',
          error: '–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á'
        };
      } else if (error.response.status === 429) {
        return {
          success: false,
          message: '‚è±Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ Coze v3',
          error: '–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤'
        };
      } else if (error.response.status === 404) {
        return {
          success: false,
          message: 'üîç API endpoint v3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é Coze.',
          error: 'API endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω'
        };
      }
    }

    // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–º—É–ª—è—Ü–∏—é
    console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Å–∏–º—É–ª—è—Ü–∏—é –æ—Ç–≤–µ—Ç–∞');
    const sim = await simulateAIResponse(message, userId);
    return { success: true, message: sim.data, data: sim.data };
  }
}

// –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ AI (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç)
async function simulateAIResponse(message, userId) {
  const responses = {
    –∫—Ä–µ–∞—Ç–∏–Ω: "üß™ **–ö—Ä–µ–∞—Ç–∏–Ω** - –æ–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö –∏–∑—É—á–µ–Ω–Ω—ã—Ö –¥–æ–±–∞–≤–æ–∫ –≤ —Å–ø–æ—Ä—Ç–µ!\n\nüìã **–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**\n‚Ä¢ –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å–∏–ª—É –Ω–∞ 5-15%\n‚Ä¢ –£—Å–∫–æ—Ä—è–µ—Ç —Ä–æ—Å—Ç –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã\n‚Ä¢ –£–ª—É—á—à–∞–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ\n‚Ä¢ –ü–æ–≤—ã—à–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –∫–æ—Ä–æ—Ç–∫–∏—Ö –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã—Ö –Ω–∞–≥—Ä—É–∑–∫–∞—Ö\n\nüíä **–ö–∞–∫ –ø—Ä–∏–Ω–∏–º–∞—Ç—å:**\n‚Ä¢ –î–æ–∑–∏—Ä–æ–≤–∫–∞: 3-5–≥ –≤ –¥–µ–Ω—å\n‚Ä¢ –í—Ä–µ–º—è: –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫\n‚Ä¢ –° —á–µ–º: –º–æ–∂–Ω–æ —Å –≤–æ–¥–æ–π, —Å–æ–∫–æ–º –∏–ª–∏ –ø—Ä–æ—Ç–µ–∏–Ω–æ–º\n‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞: –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞\n\n‚úÖ **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:** –ü–æ–ª–Ω–æ—Å—Ç—å—é –±–µ–∑–æ–ø–∞—Å–µ–Ω –ø—Ä–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏–∏ –¥–æ–∑–∏—Ä–æ–≤–∫–∏",
    —Ü–∏—Ç—Ä—É–ª–ª–∏–Ω: "üçâ **–¶–∏—Ç—Ä—É–ª–ª–∏–Ω –º–∞–ª–∞—Ç** - –º–æ—â–Ω—ã–π –ø—Ä–µ-–≤–æ—Ä–∫–∞—É—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç!\n\nüìã **–û—Å–Ω–æ–≤–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã:**\n‚Ä¢ –£–ª—É—á—à–∞–µ—Ç –∫—Ä–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –º—ã—à—Ü–∞—Ö\n‚Ä¢ –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ø–∞–º–ø–∏–Ω–≥\n‚Ä¢ –°–Ω–∏–∂–∞–µ—Ç —É—Å—Ç–∞–ª–æ—Å—Ç—å\n‚Ä¢ –£—Å–∫–æ—Ä—è–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ\n‚Ä¢ –£–ª—É—á—à–∞–µ—Ç –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å\n\nüíä **–î–æ–∑–∏—Ä–æ–≤–∫–∞:**\n‚Ä¢ 6-8–≥ –∑–∞ 30-45 –º–∏–Ω –¥–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n‚Ä¢ –ú–æ–∂–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–∞ –ø—É—Å—Ç–æ–π –∂–µ–ª—É–¥–æ–∫\n‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ 2-3 –Ω–µ–¥–µ–ª–∏\n\nüî¨ **–ú–µ—Ö–∞–Ω–∏–∑–º:** –ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –∞—Ä–≥–∏–Ω–∏–Ω ‚Üí —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç NO ‚Üí —Ä–∞—Å—à–∏—Ä—è–µ—Ç —Å–æ—Å—É–¥—ã",
    –º–∞–ª–∞—Ç: "üçâ **–¶–∏—Ç—Ä—É–ª–ª–∏–Ω –º–∞–ª–∞—Ç** - –º–æ—â–Ω—ã–π –ø—Ä–µ-–≤–æ—Ä–∫–∞—É—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç!\n\nüìã **–û—Å–Ω–æ–≤–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã:**\n‚Ä¢ –£–ª—É—á—à–∞–µ—Ç –∫—Ä–æ–≤–æ–æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –º—ã—à—Ü–∞—Ö\n‚Ä¢ –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ø–∞–º–ø–∏–Ω–≥\n‚Ä¢ –°–Ω–∏–∂–∞–µ—Ç —É—Å—Ç–∞–ª–æ—Å—Ç—å\n‚Ä¢ –£—Å–∫–æ—Ä—è–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ\n‚Ä¢ –£–ª—É—á—à–∞–µ—Ç –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å\n\nüíä **–î–æ–∑–∏—Ä–æ–≤–∫–∞:**\n‚Ä¢ 6-8–≥ –∑–∞ 30-45 –º–∏–Ω –¥–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n‚Ä¢ –ú–æ–∂–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–∞ –ø—É—Å—Ç–æ–π –∂–µ–ª—É–¥–æ–∫\n‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ 2-3 –Ω–µ–¥–µ–ª–∏\n\nüî¨ **–ú–µ—Ö–∞–Ω–∏–∑–º:** –ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –∞—Ä–≥–∏–Ω–∏–Ω ‚Üí —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç NO ‚Üí —Ä–∞—Å—à–∏—Ä—è–µ—Ç —Å–æ—Å—É–¥—ã",
    –ø—Ä–æ—Ç–µ–∏–Ω: "ü•§ **–ü—Ä–æ—Ç–µ–∏–Ω** - –æ—Å–Ω–æ–≤–∞ –º—ã—à–µ—á–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞!\n\nüìä **–¢–∏–ø—ã –ø—Ä–æ—Ç–µ–∏–Ω–∞:**\n‚Ä¢ –°—ã–≤–æ—Ä–æ—Ç–æ—á–Ω—ã–π (–±—ã—Å—Ç—Ä—ã–π)\n‚Ä¢ –ö–∞–∑–µ–∏–Ω–æ–≤—ã–π (–º–µ–¥–ª–µ–Ω–Ω—ã–π)\n‚Ä¢ –†–∞—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π (–≥–æ—Ä–æ—Ö–æ–≤—ã–π, —Å–æ–µ–≤—ã–π)\n\n‚è∞ **–ö–æ–≥–¥–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å:**\n‚Ä¢ –ü–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ (30-60 –º–∏–Ω)\n‚Ä¢ –ú–µ–∂–¥—É –ø—Ä–∏–µ–º–∞–º–∏ –ø–∏—â–∏\n‚Ä¢ –ü–µ—Ä–µ–¥ —Å–Ω–æ–º (–∫–∞–∑–µ–∏–Ω)\n\nüí™ **–î–æ–∑–∏—Ä–æ–≤–∫–∞:** 20-40–≥ –∑–∞ –ø—Ä–∏–µ–º",
    —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫: "üèãÔ∏è‚Äç‚ôÇÔ∏è **–û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:**\n\nüìÖ **–î–ª—è –Ω–æ–≤–∏—á–∫–æ–≤:**\n‚Ä¢ 2-3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é\n‚Ä¢ 8-12 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≤ –º–µ—Å—è—Ü\n‚Ä¢ –§–æ–∫—É—Å –Ω–∞ —Ç–µ—Ö–Ω–∏–∫—É –∏ –±–∞–∑–æ–≤—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è\n\nÔøΩ **–î–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö:**\n‚Ä¢ 4-6 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é\n‚Ä¢ 16-24 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –º–µ—Å—è—Ü\n‚Ä¢ –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ –≥—Ä—É–ø–ø–∞–º –º—ã—à—Ü\n\n‚öñÔ∏è **–ó–æ–ª–æ—Ç–æ–µ –ø—Ä–∞–≤–∏–ª–æ:** –ö–∞—á–µ—Å—Ç–≤–æ –≤–∞–∂–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞!\n\n‚è±Ô∏è **–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** 45-90 –º–∏–Ω—É—Ç\nüî• **–û—Ç–¥—ã—Ö –º–µ–∂–¥—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏:** –º–∏–Ω–∏–º—É–º 48 —á–∞—Å–æ–≤ –¥–ª—è –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø—ã –º—ã—à—Ü"
  };

  const lowerMessage = message.toLowerCase();
  let response = null;

  for (const [key, value] of Object.entries(responses)) {
    if (lowerMessage.includes(key)) {
      response = value;
      break;
    }
  }

  if (!response) {
    response = "ü§ñ **–ü—Ä–∏–≤–µ—Ç!** –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-—Ç—Ä–µ–Ω–µ—Ä!\n\nüìã **–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å:**\n‚Ä¢ –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–∞–º–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –ø–∏—Ç–∞–Ω–∏—è\n‚Ä¢ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º —Ñ–∏—Ç–Ω–µ—Å-—Ü–µ–ª–µ–π\n‚Ä¢ –í—ã–±–æ—Ä–æ–º —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è\n\nüí™ –ó–∞–¥–∞–≤–∞–π—Ç–µ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Ñ–∏—Ç–Ω–µ—Å–µ!";
  }
  
  return {
    success: true,
    data: response + "\n\n‚ö†Ô∏è *–î–µ–º–æ-—Ä–µ–∂–∏–º: –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –ò–ò —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Coze API.*"
  };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
async function pollForChatCompletion(conversationId, chatId, maxAttempts = 30) {
  console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º polling –¥–ª—è conversation:', conversationId);
  
  for (let attempt = 1; attempt <= maxAttempts; attempt++) {
    try {
      console.log(`üìä –ü–æ–ø—ã—Ç–∫–∞ ${attempt}/${maxAttempts} - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å...`);
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ v3
      const statusResponse = await axios.get(
        `${COZE_API_BASE_URL}/v3/chat/retrieve`,
        {
          params: {
            conversation_id: conversationId,
            chat_id: chatId
          },
          headers: {
            'Authorization': `Bearer ${process.env.COZE_API_KEY}`,
            'Content-Type': 'application/json'
          },
          timeout: 10000
        }
      );

      console.log(`üì• –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç (–ø–æ–ø—ã—Ç–∫–∞ ${attempt}):`, statusResponse.data);

      if (statusResponse.data?.data?.status === 'completed') {
        console.log('‚úÖ –†–∞–∑–≥–æ–≤–æ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω, –ø–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è...');
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π v3
        const messagesResponse = await axios.get(
          `${COZE_API_BASE_URL}/v3/chat/message/list`,
          {
            params: {
              conversation_id: conversationId,
              chat_id: chatId
            },
            headers: {
              'Authorization': `Bearer ${process.env.COZE_API_KEY}`,
              'Content-Type': 'application/json'
            },
            timeout: 10000
          }
        );

        console.log('üì® –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–≤–µ—Ç:', JSON.stringify(messagesResponse.data, null, 2));

        // –ò—â–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
        const messages = messagesResponse.data?.data || [];
        const assistantMessage = messages.find(msg => 
          msg.role === 'assistant' && 
          msg.type === 'answer' && 
          msg.content && 
          msg.content.trim()
        );

        if (assistantMessage && assistantMessage.content) {
          console.log('üéâ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò:', assistantMessage.content.substring(0, 100) + '...');
          return assistantMessage.content;
        } else {
          console.log('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö');
          return null;
        }

      } else if (statusResponse.data?.data?.status === 'failed') {
        console.log('‚ùå –†–∞–∑–≥–æ–≤–æ—Ä –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π');
        return null;
      } else {
        console.log(`‚è≥ –°—Ç–∞—Ç—É—Å: ${statusResponse.data?.data?.status}, –∂–¥–µ–º...`);
        // –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
        await new Promise(resolve => setTimeout(resolve, 2000));
      }

    } catch (error) {
      console.log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, error.message);
      
      // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
      if (error.response) {
        console.log(`üìÑ –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, error.response.data);
      }
      
      if (attempt === maxAttempts) {
        console.log('üî¥ –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫');
        return null;
      }
      
      // –ñ–¥–µ–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
      await new Promise(resolve => setTimeout(resolve, 3000));
    }
  }

  console.log('‚è∞ –¢–∞–π–º–∞—É—Ç polling - –Ω–µ –¥–æ–∂–¥–∞–ª–∏—Å—å –æ—Ç–≤–µ—Ç–∞');
  return null;
}
