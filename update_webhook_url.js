import axios from 'axios';

async function updateWebhookURL() {
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è—é URL webhook –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö YooKassa...');
    
    const shopId = '1158662'; // –í–∞—à shop ID –¥–ª—è production
    const secretKey = process.env.YOOKASSA_PROD_SECRET_KEY || 'live_E2dE-ecYsexDzsBT-AzkDNeZ2HWPCBGQ52yPO6LdnIs';
    
    const newWebhookUrl = 'http://85.198.80.51:3005/webhook/payment';
    
    try {
        const auth = Buffer.from(`${shopId}:${secretKey}`).toString('base64');
        
        // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö webhook'–æ–≤
        console.log('üìã –ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ webhook\'–æ–≤...');
        const listResponse = await axios.get('https://api.yookassa.ru/v3/webhooks', {
            headers: {
                'Authorization': `Basic ${auth}`,
                'Content-Type': 'application/json'
            }
        });
        
        console.log('üìÑ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ webhook\'—ã:', JSON.stringify(listResponse.data, null, 2));
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ webhook'—ã –µ—Å–ª–∏ –µ—Å—Ç—å
        if (listResponse.data.items && listResponse.data.items.length > 0) {
            for (const webhook of listResponse.data.items) {
                console.log(`üóëÔ∏è –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–π webhook: ${webhook.id} - ${webhook.url}`);
                await axios.delete(`https://api.yookassa.ru/v3/webhooks/${webhook.id}`, {
                    headers: {
                        'Authorization': `Basic ${auth}`,
                        'Content-Type': 'application/json'
                    }
                });
            }
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π webhook
        console.log(`üìç –°–æ–∑–¥–∞—é –Ω–æ–≤—ã–π webhook: ${newWebhookUrl}`);
        const createResponse = await axios.post('https://api.yookassa.ru/v3/webhooks', {
            event: 'payment.succeeded',
            url: newWebhookUrl
        }, {
            headers: {
                'Authorization': `Basic ${auth}`,
                'Content-Type': 'application/json'
            }
        });
        
        console.log('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:', JSON.stringify(createResponse.data, null, 2));
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ webhook:', error.response?.data || error.message);
    }
}

updateWebhookURL();