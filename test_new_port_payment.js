import axios from 'axios';

async function testNewPortPayment() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É—é —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ —Å –Ω–æ–≤—ã–º webhook URL...');
    
    const testPaymentData = {
        amount: { value: '100.00', currency: 'RUB' },
        confirmation: { type: 'redirect', return_url: 'http://85.198.80.51:3005/' },
        description: '–¢–µ—Å—Ç –ø–ª–∞—Ç–µ–∂–∞ - –Ω–æ–≤—ã–π –ø–æ—Ä—Ç 3005',
        metadata: {
            telegram_id: '123456789',
            user_name: 'Test User'
        }
    };
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å webhook
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å webhook...');
        const webhookResponse = await axios.get('http://85.198.80.51:3005/webhook/payment');
        console.log('‚úÖ Webhook –æ—Ç–≤–µ—á–∞–µ—Ç:', webhookResponse.data);
        
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂
        const shopId = process.env.YOOKASSA_TEST_SHOP_ID || '1139867';
        const secretKey = process.env.YOOKASSA_TEST_SECRET_KEY || 'test_hczBNmYmZ4vs8QaSMsyGHFdtU_3X039YoTcFS4L7DMo';
        const auth = Buffer.from(`${shopId}:${secretKey}`).toString('base64');
        
        console.log('üí≥ –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂...');
        const paymentResponse = await axios.post('https://api.yookassa.ru/v3/payments', testPaymentData, {
            headers: {
                'Authorization': `Basic ${auth}`,
                'Content-Type': 'application/json',
                'Idempotence-Key': `test-${Date.now()}`
            }
        });
        
        console.log('‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
        console.log('üí∞ ID –ø–ª–∞—Ç–µ–∂–∞:', paymentResponse.data.id);
        console.log('üîó –°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã:', paymentResponse.data.confirmation?.confirmation_url);
        console.log('üìÑ –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:', JSON.stringify(paymentResponse.data, null, 2));
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.response?.data || error.message);
    }
}

testNewPortPayment();