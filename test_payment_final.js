/**
 * üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –û–ü–õ–ê–¢–´
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª: —Å–æ–∑–¥–∞–Ω–∏–µ ‚Üí –∞–∫—Ç–∏–≤–∞—Ü–∏—è ‚Üí –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
 */

import dotenv from 'dotenv';
import { 
  initDatabase,
  createOrUpdateUser, 
  getUserByTelegramId,
  getActiveSubscription,
  createSubscription,
  activateSubscription,
  canUserMakeRequest,
  incrementRequestUsage,
  getAllUserSubscriptions
} from './src/services/database.js';

import { createSubscriptionPayment } from './src/services/payment.js';

dotenv.config();

console.log('üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –û–ü–õ–ê–¢–´');
console.log('='.repeat(50));

async function finalTest() {
  try {
    await initDatabase();
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞\n');
    
    // üß™ –≠–¢–ê–ü 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üë§ –≠–¢–ê–ü 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('-'.repeat(30));
    
    const testUser = {
      id: 555444333,
      first_name: '–§–∏–Ω–∞–ª—å–Ω—ã–π',
      last_name: '–¢–µ—Å—Ç',
      username: 'final_test_user'
    };
    
    await createOrUpdateUser(testUser);
    const dbUser = await getUserByTelegramId(testUser.id);
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: ${dbUser.first_name} (ID: ${dbUser.id})`);
    
    // üß™ –≠–¢–ê–ü 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ YooKassa
    console.log('\nüí≥ –≠–¢–ê–ü 2: –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ YooKassa');
    console.log('-'.repeat(40));
    
    const paymentResult = await createSubscriptionPayment(
      testUser,
      'basic',
      150,
      '–¢–µ—Å—Ç–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –ë–∞–∑–æ–≤—ã–π –ø–ª–∞–Ω'
    );
    
    if (paymentResult && paymentResult.success && paymentResult.payment) {
      console.log('‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω –≤ YooKassa');
      console.log(`   ID –ø–ª–∞—Ç–µ–∂–∞: ${paymentResult.payment.id}`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${paymentResult.payment.status}`);
      console.log(`   –°—É–º–º–∞: ${paymentResult.payment.amount.value} ${paymentResult.payment.amount.currency}`);
    } else {
      console.log('‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –ø–ª–∞—Ç–µ–∂–∞, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ç–µ—Å—Ç');
    }
    
    // üß™ –≠–¢–ê–ü 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ (PENDING)
    console.log('\nüìù –≠–¢–ê–ü 3: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏');
    console.log('-'.repeat(30));
    
    const testPaymentId = `test_payment_${Date.now()}`;
    console.log(`üìã –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É —Å payment_id: ${testPaymentId}`);
    
    const subscription = await createSubscription(
      testUser.id,
      'basic',
      150,
      testPaymentId
    );
    
    if (subscription) {
      console.log('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º PENDING');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞
      const activeSubBefore = await getActiveSubscription(dbUser.id);
      console.log(`üîç –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: ${activeSubBefore ? '–ù–ê–ô–î–ï–ù–ê' : '–ù–ï –ù–ê–ô–î–ï–ù–ê'}`);
      
      const accessBefore = await canUserMakeRequest(dbUser.id);
      console.log(`üîç –î–æ—Å—Ç—É–ø –¥–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: ${accessBefore.type} (${accessBefore.remaining} –∑–∞–ø—Ä–æ—Å–æ–≤)`);
      
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏');
      return;
    }
    
    // üß™ –≠–¢–ê–ü 4: –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ (–∏–º–∏—Ç–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ webhook)
    console.log('\nüéØ –≠–¢–ê–ü 4: –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏');
    console.log('-'.repeat(30));
    
    console.log('üí∞ –ò–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π webhook –æ—Ç YooKassa...');
    const activationResult = await activateSubscription(testPaymentId);
    
    if (activationResult) {
      console.log('‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ê–ö–¢–ò–í–ò–†–û–í–ê–ù–ê!');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ —Ç–µ–ø–µ—Ä—å –∞–∫—Ç–∏–≤–Ω–∞
      const activeSubAfter = await getActiveSubscription(dbUser.id);
      if (activeSubAfter) {
        console.log(`‚úÖ –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: ${activeSubAfter.plan_type}`);
        console.log(`   –°—Ç–∞—Ç—É—Å: ${activeSubAfter.status}`);
        console.log(`   –õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤: ${activeSubAfter.requests_limit}`);
        console.log(`   –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: ${new Date(activeSubAfter.end_date).toLocaleDateString('ru-RU')}`);
      } else {
        console.log('‚ùå –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      }
      
      const accessAfter = await canUserMakeRequest(dbUser.id);
      console.log(`üîç –î–æ—Å—Ç—É–ø –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: ${accessAfter.type} (${accessAfter.remaining} –∑–∞–ø—Ä–æ—Å–æ–≤)`);
      
      if (accessAfter.type === 'subscription' && accessAfter.remaining > 0) {
        console.log('üéâ –°–ò–°–¢–ï–ú–ê –û–ü–õ–ê–¢–´ –†–ê–ë–û–¢–ê–ï–¢ –ü–û–õ–ù–û–°–¢–¨–Æ!');
      }
      
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏');
    }
    
    // üß™ –≠–¢–ê–ü 5: –¢–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
    console.log('\nüìä –≠–¢–ê–ü 5: –¢–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤');
    console.log('-'.repeat(35));
    
    const initialAccess = await canUserMakeRequest(dbUser.id);
    console.log(`üîç –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${initialAccess.remaining} –∑–∞–ø—Ä–æ—Å–æ–≤`);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å–æ–≤
    for (let i = 1; i <= 3; i++) {
      await incrementRequestUsage(dbUser.id);
      const currentAccess = await canUserMakeRequest(dbUser.id);
      console.log(`   –ü–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞ ${i}: ${currentAccess.remaining} –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å`);
      
      if (i === 1 && currentAccess.remaining === initialAccess.remaining - 1) {
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ª–∏–º–∏—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
      }
    }
    
    // üß™ –≠–¢–ê–ü 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('\nüß† –≠–¢–ê–ü 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('-'.repeat(40));
    
    // "–ó–∞–±—ã–≤–∞–µ–º" –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ª—É—á–∞–µ–º –∑–∞–Ω–æ–≤–æ
    const rememberedUser = await getUserByTelegramId(testUser.id);
    const rememberedSubscription = await getActiveSubscription(rememberedUser.id);
    const rememberedAccess = await canUserMakeRequest(rememberedUser.id);
    const allSubscriptions = await getAllUserSubscriptions(testUser.id);
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –ø–æ–º–Ω–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
    console.log(`   ‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: ${rememberedUser ? rememberedUser.first_name : '–ù–ï–¢'}`);
    console.log(`   ‚úì –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: ${rememberedSubscription ? rememberedSubscription.plan_type : '–ù–ï–¢'}`);
    console.log(`   ‚úì –î–æ—Å—Ç—É–ø –∫ –∑–∞–ø—Ä–æ—Å–∞–º: ${rememberedAccess.canMake ? '–ï–°–¢–¨' : '–ù–ï–¢'}`);
    console.log(`   ‚úì –ò—Å—Ç–æ—Ä–∏—è –ø–æ–¥–ø–∏—Å–æ–∫: ${allSubscriptions.length} –ø–æ–¥–ø–∏—Å–æ–∫`);
    
    // üèÜ –§–ò–ù–ê–õ–¨–ù–ê–Ø –û–¶–ï–ù–ö–ê
    console.log('\n' + '='.repeat(50));
    console.log('üèÜ –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê –°–ò–°–¢–ï–ú–´ –û–ü–õ–ê–¢–´');
    console.log('='.repeat(50));
    
    const checks = [
      { name: '–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', status: !!rememberedUser },
      { name: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å YooKassa', status: paymentResult && paymentResult.success },
      { name: '–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏', status: !!subscription },
      { name: '–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏', status: !!rememberedSubscription },
      { name: '–ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞', status: rememberedAccess.canMake },
      { name: '–°–∏—Å—Ç–µ–º–∞ –ª–∏–º–∏—Ç–æ–≤', status: rememberedAccess.type === 'subscription' },
      { name: '–ó–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', status: allSubscriptions.length > 0 }
    ];
    
    let passedChecks = 0;
    checks.forEach((check, index) => {
      const status = check.status ? '‚úÖ –†–ê–ë–û–¢–ê–ï–¢' : '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢';
      console.log(`${index + 1}. ${check.name}: ${status}`);
      if (check.status) passedChecks++;
    });
    
    const percentage = Math.round((passedChecks / checks.length) * 100);
    console.log(`\nüìä –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢: ${passedChecks}/${checks.length} (${percentage}%)`);
    
    if (percentage >= 85) {
      console.log('\nüéâ –°–ò–°–¢–ï–ú–ê –û–ü–õ–ê–¢–´ –†–ê–ë–û–¢–ê–ï–¢ –û–¢–õ–ò–ß–ù–û!');
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¢–û–ß–ù–û –ó–ê–ü–û–ú–ò–ù–ê–Æ–¢–°–Ø');
      console.log('‚úÖ –î–æ—Å—Ç—É–ø –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ü–†–ï–î–û–°–¢–ê–í–õ–Ø–ï–¢–°–Ø');
      console.log('‚úÖ –õ–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –ö–û–ù–¢–†–û–õ–ò–†–£–Æ–¢–°–Ø');
    } else if (percentage >= 70) {
      console.log('\nüëç –°–∏—Å—Ç–µ–º–∞ –æ–ø–ª–∞—Ç—ã —Ä–∞–±–æ—Ç–∞–µ—Ç —Ö–æ—Ä–æ—à–æ —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏');
    } else {
      console.log('\n‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –æ–ø–ª–∞—Ç—ã —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–æ–∫');
    }
    
    // –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('\nüìã –°–û–°–¢–û–Ø–ù–ò–ï –°–ò–°–¢–ï–ú–´:');
    if (rememberedUser && rememberedSubscription && rememberedAccess.canMake) {
      console.log('üéØ –ì–õ–ê–í–ù–´–ô –í–´–í–û–î: –°–ò–°–¢–ï–ú–ê –û–ü–õ–ê–¢–´ –¢–û–ß–ù–û –†–ê–ë–û–¢–ê–ï–¢!');
      console.log('   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ‚úÖ');
      console.log('   ‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è –∏ –∞–∫—Ç–∏–≤–∏—Ä—É—é—Ç—Å—è ‚úÖ');
      console.log('   ‚Ä¢ –î–æ—Å—Ç—É–ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã ‚úÖ');
      console.log('   ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –ó–ê–ü–û–ú–ò–ù–ê–ï–¢ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ‚úÖ');
    } else {
      console.log('‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Ç—Ä–µ–±—É—é—â–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

finalTest();
