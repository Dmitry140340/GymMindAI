# PowerShell script –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ –±–µ–∑ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç sshpass –∏–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø–µ—Ä–µ–¥–∞—á—É –ø–∞—Ä–æ–ª—è

param(
    [string]$ServerIP = "85.198.80.51",
    [string]$Username = "root", 
    [string]$Password = "boNe?7vBEtkL-_"
)

Write-Host "üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ï–†–í–ï–†–ê" -ForegroundColor Green
Write-Host "====================================" -ForegroundColor Green
Write-Host "üìç –°–µ—Ä–≤–µ—Ä: $ServerIP" -ForegroundColor Yellow
Write-Host "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $Username" -ForegroundColor Yellow
Write-Host "‚è∞ –í—Ä–µ–º—è: $(Get-Date)" -ForegroundColor Cyan
Write-Host ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SSH –∫–æ–º–∞–Ω–¥—ã —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–µ—Ä–µ–¥–∞—á–µ–π –ø–∞—Ä–æ–ª—è
function Invoke-SSHCommand {
    param(
        [string]$Command,
        [string]$Description
    )
    
    Write-Host "üîÑ $Description" -ForegroundColor Cyan
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç expect
    $expectScript = @"
#!/usr/bin/expect -f
set timeout 20
spawn ssh $Username@$ServerIP "$Command"
expect "password:"
send "$Password\r"
expect eof
"@
    
    # –î–ª—è Windows –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥
    try {
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º PowerShell —Å System.Diagnostics.Process
        $psi = New-Object System.Diagnostics.ProcessStartInfo
        $psi.FileName = "ssh"
        $psi.Arguments = "$Username@$ServerIP `"$Command`""
        $psi.UseShellExecute = $false
        $psi.RedirectStandardInput = $true
        $psi.RedirectStandardOutput = $true
        $psi.RedirectStandardError = $true
        $psi.CreateNoWindow = $true
        
        $process = [System.Diagnostics.Process]::Start($psi)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å
        Start-Sleep -Seconds 2
        $process.StandardInput.WriteLine($Password)
        $process.StandardInput.Close()
        
        # –ß–∏—Ç–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        $output = $process.StandardOutput.ReadToEnd()
        $error = $process.StandardError.ReadToEnd()
        
        $process.WaitForExit()
        
        if ($process.ExitCode -eq 0) {
            Write-Host "‚úÖ –£—Å–ø–µ—à–Ω–æ: $Description" -ForegroundColor Green
            Write-Host $output -ForegroundColor White
            return $true
        } else {
            Write-Host "‚ùå –û—à–∏–±–∫–∞: $Description" -ForegroundColor Red
            Write-Host $error -ForegroundColor Red
            return $false
        }
    }
    catch {
        Write-Host "‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è SSH —Å–µ—Å—Å–∏–∏ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–∞—Ä–æ–ª—è
function Start-AutoSSHSession {
    Write-Host "üîê –°–æ–∑–¥–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π SSH —Å–µ—Å—Å–∏–∏..." -ForegroundColor Cyan
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –∫–æ–º–∞–Ω–¥–∞–º–∏
    $commandsFile = [System.IO.Path]::GetTempFileName()
    
    $commands = @(
        "cd /root/GymMindAI",
        "echo 'üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏–∑ GitHub...'",
        "git pull origin main",
        "echo 'üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞...'", 
        "systemctl restart gymmind-bot",
        "sleep 3",
        "echo 'üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞...'",
        "systemctl status gymmind-bot --no-pager -l",
        "echo '‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!'"
    )
    
    $commands | Out-File -FilePath $commandsFile -Encoding ASCII
    
    try {
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º PowerShell –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π SSH —Å–µ—Å—Å–∏–∏
        $psi = New-Object System.Diagnostics.ProcessStartInfo
        $psi.FileName = "ssh"
        $psi.Arguments = "-t $Username@$ServerIP"
        $psi.UseShellExecute = $false
        $psi.RedirectStandardInput = $true
        $psi.RedirectStandardOutput = $true
        $psi.RedirectStandardError = $true
        
        $process = [System.Diagnostics.Process]::Start($psi)
        
        # –ñ–¥–µ–º –∑–∞–ø—Ä–æ—Å –ø–∞—Ä–æ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
        Start-Sleep -Seconds 3
        $process.StandardInput.WriteLine($Password)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã
        foreach ($cmd in $commands) {
            Start-Sleep -Seconds 1
            $process.StandardInput.WriteLine($cmd)
        }
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é
        Start-Sleep -Seconds 2
        $process.StandardInput.WriteLine("exit")
        $process.StandardInput.Close()
        
        # –ß–∏—Ç–∞–µ–º –≤–µ—Å—å –≤—ã–≤–æ–¥
        $output = $process.StandardOutput.ReadToEnd()
        $error = $process.StandardError.ReadToEnd()
        
        $process.WaitForExit(30000) # 30 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
        
        Write-Host "üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:" -ForegroundColor Yellow
        Write-Host $output -ForegroundColor White
        
        if ($error) {
            Write-Host "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è/–æ—à–∏–±–∫–∏:" -ForegroundColor Yellow
            Write-Host $error -ForegroundColor Red
        }
        
        return $process.ExitCode -eq 0
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ SSH –∫–æ–º–∞–Ω–¥: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
    finally {
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if (Test-Path $commandsFile) {
            Remove-Item $commandsFile -Force
        }
    }
}

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π SSH —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º
function Update-ServerAlternative {
    Write-Host "üîÑ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..." -ForegroundColor Cyan
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    $remoteCommands = "cd /root/GymMindAI && git pull origin main && systemctl restart gymmind-bot && systemctl status gymmind-bot --no-pager"
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π batch —Ñ–∞–π–ª –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
    $batchContent = @"
@echo off
echo $Password | ssh $Username@$ServerIP "$remoteCommands"
"@
    
    $batchFile = [System.IO.Path]::GetTempFileName() + ".bat"
    $batchContent | Out-File -FilePath $batchFile -Encoding ASCII
    
    try {
        $result = & cmd /c $batchFile
        Write-Host $result -ForegroundColor White
        return $true
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
    finally {
        if (Test-Path $batchFile) {
            Remove-Item $batchFile -Force
        }
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
Write-Host "üöÄ –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
Write-Host "ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞..." -ForegroundColor Cyan
try {
    $botStatus = Invoke-RestMethod -Uri "https://api.telegram.org/bot8128410187:AAG0B0lsF65xnH0X3Ld2M7IqMK4OlLuK_Y8/getMe"
    if ($botStatus.ok) {
        Write-Host "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç: @$($botStatus.result.username)" -ForegroundColor Green
    }
}
catch {
    Write-Host "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞" -ForegroundColor Yellow
}

Write-Host ""

# –ü—Ä–æ–±—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥
$success = Start-AutoSSHSession

if (-not $success) {
    Write-Host "‚ö†Ô∏è –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π..." -ForegroundColor Yellow
    $success = Update-ServerAlternative
}

if ($success) {
    Write-Host ""
    Write-Host "üéâ –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ï–†–í–ï–†–ê –ó–ê–í–ï–†–®–ï–ù–û!" -ForegroundColor Green
    Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ (10 —Å–µ–∫—É–Ω–¥)..." -ForegroundColor Cyan
    Start-Sleep -Seconds 10
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..." -ForegroundColor Cyan
    try {
        $botStatus = Invoke-RestMethod -Uri "https://api.telegram.org/bot8128410187:AAG0B0lsF65xnH0X3Ld2M7IqMK4OlLuK_Y8/getMe"
        if ($botStatus.ok) {
            Write-Host "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!" -ForegroundColor Green
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            $notification = @{
                chat_id = "659874549"
                text = "‚úÖ –°–ï–†–í–ï–† –û–ë–ù–û–í–õ–ï–ù –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò`n`nü§ñ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç`nüì• –ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω —Å GitHub`n‚è∞ $(Get-Date -Format 'dd.MM.yyyy HH:mm')"
            } | ConvertTo-Json
            
            Invoke-RestMethod -Uri "https://api.telegram.org/bot8128410187:AAG0B0lsF65xnH0X3Ld2M7IqMK4OlLuK_Y8/sendMessage" -Method Post -Body $notification -ContentType "application/json"
            Write-Host "üì¨ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É" -ForegroundColor Green
        }
    }
    catch {
        Write-Host "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è" -ForegroundColor Yellow
    }
} else {
    Write-Host ""
    Write-Host "‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –û–ë–ù–û–í–ò–¢–¨ –°–ï–†–í–ï–† –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò" -ForegroundColor Red
    Write-Host "üìã –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ:" -ForegroundColor Yellow
    Write-Host "   1. ssh $Username@$ServerIP" -ForegroundColor White
    Write-Host "   2. cd /root/GymMindAI" -ForegroundColor White
    Write-Host "   3. git pull origin main" -ForegroundColor White
    Write-Host "   4. systemctl restart gymmind-bot" -ForegroundColor White
}

Write-Host ""
Write-Host "üèÅ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω" -ForegroundColor Cyan
