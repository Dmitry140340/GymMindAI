// –¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–∑ handlers.js
import dotenv from 'dotenv';

dotenv.config();

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏–∑ handlers.js...');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã handlers.js
import { readFileSync } from 'fs';

try {
  const handlersContent = readFileSync('./src/bot/handlers.js', 'utf8');
  
  console.log('üìÅ –§–∞–π–ª handlers.js –Ω–∞–π–¥–µ–Ω');
  
  // –ò—â–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  const handlerPatterns = [
    // –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    { pattern: /bot\.onText.*\/start/g, name: '–ö–æ–º–∞–Ω–¥–∞ /start' },
    { pattern: /bot\.onText.*\/help/g, name: '–ö–æ–º–∞–Ω–¥–∞ /help' },
    { pattern: /bot\.onText.*\/subscription/g, name: '–ö–æ–º–∞–Ω–¥–∞ /subscription' },
    { pattern: /bot\.onText.*\/profile/g, name: '–ö–æ–º–∞–Ω–¥–∞ /profile' },
    
    // –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    { pattern: /'ü§ñ –ò–ò-—Ç—Ä–µ–Ω–µ—Ä'/g, name: '–ö–Ω–æ–ø–∫–∞ "–ò–ò-—Ç—Ä–µ–Ω–µ—Ä"' },
    { pattern: /'üß¨ –ò–ò-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã'/g, name: '–ö–Ω–æ–ø–∫–∞ "–ò–ò-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"' },
    { pattern: /'üíé –ü–æ–¥–ø–∏—Å–∫–∞'/g, name: '–ö–Ω–æ–ø–∫–∞ "–ü–æ–¥–ø–∏—Å–∫–∞"' },
    { pattern: /'üìä –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'/g, name: '–ö–Ω–æ–ø–∫–∞ "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"' },
    { pattern: /'üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞'/g, name: '–ö–Ω–æ–ø–∫–∞ "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"' },
    { pattern: /'üéØ –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ'/g, name: '–ö–Ω–æ–ø–∫–∞ "–ú–æ–∏ –¥–∞–Ω–Ω—ã–µ"' },
    { pattern: /'‚ùì –ü–æ–º–æ—â—å'/g, name: '–ö–Ω–æ–ø–∫–∞ "–ü–æ–º–æ—â—å"' },
    
    // –ü–ª–∞–Ω—ã –ø–æ–¥–ø–∏—Å–æ–∫
    { pattern: /'üíé –ë–∞–∑–æ–≤—ã–π –ø–ª–∞–Ω'/g, name: '–ë–∞–∑–æ–≤—ã–π –ø–ª–∞–Ω' },
    { pattern: /'‚≠ê –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–ª–∞–Ω'/g, name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–ª–∞–Ω' },
    { pattern: /'üöÄ –ü—Ä–µ–º–∏—É–º –ø–ª–∞–Ω'/g, name: '–ü—Ä–µ–º–∏—É–º –ø–ª–∞–Ω' },
    
    // –ü–ª–∞—Ç–µ–∂–∏
    { pattern: /'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å —Å–µ–π—á–∞—Å'/g, name: '–ö–Ω–æ–ø–∫–∞ "–û–ø–ª–∞—Ç–∏—Ç—å —Å–µ–π—á–∞—Å"' },
    
    // –ò–ò –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    { pattern: /'üèãÔ∏è‚Äç‚ôÇÔ∏è \/training_program'/g, name: '–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫' },
    { pattern: /'ü•ó \/nutrition_plan'/g, name: '–ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è' },
    { pattern: /'üî¨ \/deepresearch'/g, name: '–ì–ª—É–±–æ–∫–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ' },
    { pattern: /'üß™ \/composition_analysis'/g, name: '–ê–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–∞–≤–∞' },
    
    // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    { pattern: /'‚öñÔ∏è –ó–∞–ø–∏—Å–∞—Ç—å –≤–µ—Å'/g, name: '–ó–∞–ø–∏—Å–∞—Ç—å –≤–µ—Å' },
    { pattern: /'üéØ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å'/g, name: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å' },
    { pattern: /'üèãÔ∏è‚Äç‚ôÇÔ∏è –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É'/g, name: '–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É' },
    { pattern: /'üìä –ú–æ–∏ –∑–∞–ø–∏—Å–∏'/g, name: '–ú–æ–∏ –∑–∞–ø–∏—Å–∏' },
    
    // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
    { pattern: /'üìà –ì—Ä–∞—Ñ–∏–∫ –≤–µ—Å–∞'/g, name: '–ì—Ä–∞—Ñ–∏–∫ –≤–µ—Å–∞' },
    { pattern: /'üèãÔ∏è‚Äç‚ôÇÔ∏è –ì—Ä–∞—Ñ–∏–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫'/g, name: '–ì—Ä–∞—Ñ–∏–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫' },
    { pattern: /'üìä –û–±—â–∏–π –æ—Ç—á–µ—Ç'/g, name: '–û–±—â–∏–π –æ—Ç—á–µ—Ç' },
    { pattern: /'üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è'/g, name: '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è' },
    
    // Callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    { pattern: /bot\.on\('callback_query'/g, name: 'Callback query –æ–±—Ä–∞–±–æ—Ç—á–∏–∫' },
    { pattern: /'accept_agreement'/g, name: '–ü—Ä–∏–Ω—è—Ç–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è' },
    { pattern: /'decline_agreement'/g, name: '–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è' }
  ];
  
  console.log('\nüîç –ü–æ–∏—Å–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤ –∫–æ–¥–µ...\n');
  
  let foundHandlers = 0;
  let totalHandlers = handlerPatterns.length;
  
  handlerPatterns.forEach((handler, index) => {
    const matches = handlersContent.match(handler.pattern);
    if (matches && matches.length > 0) {
      console.log(`‚úÖ ${index + 1}. ${handler.name} - –Ω–∞–π–¥–µ–Ω (${matches.length} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π)`);
      foundHandlers++;
    } else {
      console.log(`‚ùå ${index + 1}. ${handler.name} - –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
  });
  
  console.log(`\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í:`);
  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ: ${foundHandlers}/${totalHandlers}`);
  console.log(`üìà –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–∫—Ä—ã—Ç–∏—è: ${Math.round((foundHandlers / totalHandlers) * 100)}%`);
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  const totalLines = handlersContent.split('\n').length;
  const importLines = (handlersContent.match(/import.*from/g) || []).length;
  const exportLines = (handlersContent.match(/export/g) || []).length;
  const functionLines = (handlersContent.match(/function|=>/g) || []).length;
  
  console.log(`\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –§–ê–ô–õ–ê HANDLERS.JS:`);
  console.log(`üìÑ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: ${totalLines}`);
  console.log(`üì¶ –ò–º–ø–æ—Ä—Ç—ã: ${importLines}`);
  console.log(`üì§ –≠–∫—Å–ø–æ—Ä—Ç—ã: ${exportLines}`);
  console.log(`‚öôÔ∏è –§—É–Ω–∫—Ü–∏–∏: ${functionLines}`);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
  const keyFunctions = [
    'setupBotHandlers',
    'handleMessage',
    'handleSubscription',
    'handlePayment',
    'handleAnalytics',
    'handleUserData'
  ];
  
  console.log(`\nüéØ –ü–†–û–í–ï–†–ö–ê –ö–õ–Æ–ß–ï–í–´–• –§–£–ù–ö–¶–ò–ô:`);
  keyFunctions.forEach((func, index) => {
    if (handlersContent.includes(func)) {
      console.log(`‚úÖ ${index + 1}. ${func} - –Ω–∞–π–¥–µ–Ω–∞`);
    } else {
      console.log(`‚ö†Ô∏è ${index + 1}. ${func} - –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (–≤–æ–∑–º–æ–∂–Ω–æ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ)`);
    }
  });
  
  if (foundHandlers >= totalHandlers * 0.8) {
    console.log('\nüéâ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–ª–Ω–æ!');
  } else if (foundHandlers >= totalHandlers * 0.6) {
    console.log('\n‚ö†Ô∏è –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–µ–ª—ã.');
  } else {
    console.log('\n‚ùå –ú–Ω–æ–≥–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã.');
  }
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ handlers.js:', error.message);
}

console.log('\nüéØ –ê–Ω–∞–ª–∏–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω!');
