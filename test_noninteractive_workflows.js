import { runWorkflow } from './src/services/coze_new.js';
import dotenv from 'dotenv';

dotenv.config();

async function testNonInteractiveWorkflows() {
    console.log('üî¨ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–ï–ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–• WORKFLOW');
    console.log('======================================');
    
    const testUserId = '999999999';
    
    console.log('\nüî¨ –¢–ï–°–¢: –ì–õ–£–ë–û–ö–û–ï –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï');
    console.log('=============================');
    
    const researchParams = {
        research_topic: "–≤–ª–∏—è–Ω–∏–µ –∫—Ä–µ–∞—Ç–∏–Ω–∞ –Ω–∞ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã",
        user_id: testUserId,
        research_depth: "–ø–æ–¥—Ä–æ–±–Ω–æ",
        include_studies: "–¥–∞"
    };
    
    try {
        console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º workflow –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è...');
        const researchResult = await runWorkflow(
            process.env.COZE_DEEP_RESEARCH_WORKFLOW_ID,
            researchParams
        );
        
        console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:');
        console.log('‚úÖ Success:', researchResult.success);
        console.log('üìù Message length:', researchResult.message?.length || 0);
        console.log('üí≠ Error:', researchResult.error || '–Ω–µ—Ç');
        
        if (researchResult.message) {
            console.log('üí¨ –ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤:', researchResult.message.substring(0, 500) + '...');
        }
        
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:', error.message);
    }
    
    console.log('\nüß™ –¢–ï–°–¢: –ê–ù–ê–õ–ò–ó –°–û–°–¢–ê–í–ê');
    console.log('======================');
    
    const analysisParams = {
        product_name: "—Ç–≤–æ—Ä–æ–≥ 9% –∂–∏—Ä–Ω–æ—Å—Ç–∏",
        analysis_type: "nutritional",
        user_id: testUserId,
        detailed: "–¥–∞"
    };
    
    try {
        console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º workflow –∞–Ω–∞–ª–∏–∑–∞...');
        const analysisResult = await runWorkflow(
            process.env.COZE_COMPOSITION_ANALYSIS_WORKFLOW_ID,
            analysisParams
        );
        
        console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ —Å–æ—Å—Ç–∞–≤–∞:');
        console.log('‚úÖ Success:', analysisResult.success);
        console.log('üìù Message length:', analysisResult.message?.length || 0);
        console.log('üí≠ Error:', analysisResult.error || '–Ω–µ—Ç');
        
        if (analysisResult.message) {
            console.log('üí¨ –ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤:', analysisResult.message.substring(0, 500) + '...');
        }
        
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å–æ—Å—Ç–∞–≤–∞:', error.message);
    }
    
    console.log('\n‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û');
}

testNonInteractiveWorkflows().catch(console.error);
