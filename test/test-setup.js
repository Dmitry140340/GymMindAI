import dotenv from 'dotenv';
import { checkCozeConnection, sendMessageToCoze } from '../src/services/coze.js';
import { initDatabase, createOrUpdateUser } from '../src/services/database.js';

dotenv.config();

async function runTests() {
  console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...\n');

  // –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
  console.log('1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  try {
    await initDatabase();
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: OK\n');
  } catch (error) {
    console.error('‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: FAIL', error.message);
    return;
  }

  // –¢–µ—Å—Ç Coze API
  console.log('2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Coze API...');
  try {
    const cozeConnected = await checkCozeConnection();
    if (cozeConnected) {
      console.log('‚úÖ Coze API: OK');
      
      // –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ Coze
      const testResponse = await sendMessageToCoze('–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.', 12345);
      if (testResponse.success) {
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ Coze: OK');
        console.log('üìù –û—Ç–≤–µ—Ç:', testResponse.message.substring(0, 100) + '...');
      } else {
        console.log('‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ Coze: FAIL');
        console.log('üìù –û—à–∏–±–∫–∞:', testResponse.message);
      }
    } else {
      console.log('‚ùå Coze API: FAIL - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è');
    }
  } catch (error) {
    console.error('‚ùå Coze API: FAIL', error.message);
  }
  console.log('');

  // –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  console.log('3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
  try {
    const testUser = {
      id: 12345,
      username: 'test_user',
      first_name: 'Test User'
    };
    
    await createOrUpdateUser(testUser);
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: OK\n');
  } catch (error) {
    console.error('‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: FAIL', error.message);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
  console.log('4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...');
  const requiredVars = [
    'TELEGRAM_BOT_TOKEN',
    'COZE_API_KEY',
    'COZE_BOT_ID',
    'YOOKASSA_SHOP_ID',
    'YOOKASSA_SECRET_KEY'
  ];

  let allVarsPresent = true;
  for (const varName of requiredVars) {
    if (!process.env[varName] || process.env[varName].includes('your_')) {
      console.log(`‚ö†Ô∏è ${varName}: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞`);
      allVarsPresent = false;
    } else {
      console.log(`‚úÖ ${varName}: –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞`);
    }
  }

  if (allVarsPresent) {
    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É.');
  } else {
    console.log('\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env');
  }
}

runTests().catch(console.error);
